var Attribute = require('../../fun/attribute'),
	Reference = require('../../fun/reference');

/**
 * AWS::RDS::EventSubscription - Use the AWS::RDS::EventSubscription resource to get notifications for Amazon Relational Database Service events through the Amazon Simple Notification Service. For more information, see Using Amazon RDS Event Notification in the Amazon Relational Database Service User Guide.
 * @constructor
 */
function RDSEventSubscription(name, initialData) {
	if (!name) {
		throw new Error('name is required');
	}

	this.name = name;
	this.data = initialData || {};
	this.reference = new Reference(this);
}

RDSEventSubscription.prototype = {
	
	/**
	 * Indicates whether to activate the subscription. If you don't specify this property, AWS CloudFormation activates the subscription.
	 *
	 * Required: false
	 * Update requires: No interruption
	 *
	 * @param {Boolean} value
	 * @return {RDSEventSubscription}
	 */
	enabled: function(value) {
		return this.set('Enabled', value);
	},

	/**
	 * A list of event categories that you want to subscribe to for a given source type. If you don't specify this property, you are notified about all event categories.
	 *
	 * Required: false
	 * Update requires: No interruption
	 *
	 * @param {string[]} value
	 * @return {RDSEventSubscription}
	 */
	eventCategories: function(value) {
		return this.set('EventCategories', value);
	},

	/**
	 * The Amazon Resource Name (ARN) of an Amazon SNS topic that you want to send event notifications to.
	 *
	 * Required: true
	 * Update requires: Replacement
	 *
	 * @param {String} value
	 * @return {RDSEventSubscription}
	 */
	snsTopicArn: function(value) {
		return this.set('SnsTopicArn', value);
	},

	/**
	 * A list of identifiers for which Amazon RDS provides notification events.
	 *
	 * Required: false
	 * Update requires: No interruption
	 *
	 * @param {string[]} value
	 * @return {RDSEventSubscription}
	 */
	sourceIds: function(value) {
		return this.set('SourceIds', value);
	},

	/**
	 * The type of source for which Amazon RDS provides notification events. For example, if you want to be notified of events generated by a database instance, set this parameter to db-instance. If you don't specify a value, notifications are provided for all source types.
	 *
	 * Required: false
	 * Update requires: Replacement if you're removing this property after it was previously specified. All other updates require no interruption.
	 *
	 * @param {String} value
	 * @return {RDSEventSubscription}
	 */
	sourceType: function(value) {
		return this.set('SourceType', value);
	},

	set: function(key, value) {
		this.data[key] = value;
		return this;
	},

	attr: function() {
		throw new Error('AWS::RDS::EventSubscription has no attributes');
	},

	get ref() {
		return this.reference;
	},

	toJSON: function() {
		return this.data;
	},

	toString: function() {
		return JSON.stringify(this, null, '  ');
	}
};

module.exports = RDSEventSubscription;
